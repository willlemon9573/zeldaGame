using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using SprintZero1.Entities.EnemyEnetities;

namespace SprintZero1.StatePatterns.BossStatePatterns.AquamentusStatePattern
{
    internal class AquamentusVulnerabilityState : BaseBossState
    {
        private bool _isVulnerable;
        private const float InvulnerabilityTime = 1 / 5f;
        private float _elapsedInvulnerabilityTime;

        public AquamentusVulnerabilityState(BaseBossEntity boss) : base(boss)
        {
            _isVulnerable = true;
        }

        public override void Draw(SpriteBatch spriteBatch)
        {
            if (_isVulnerable == false || _boss.Health <= 0) { return; }
            // Not sure if needed just yet
        }

        /// <summary>
        /// Request this when the boss takes damage so they enter their invulnerable state
        /// </summary>
        public override void Request()
        {
            if (_isVulnerable == false || _boss.Health <= 0) { return; }
            _isVulnerable = false;
            _elapsedInvulnerabilityTime = 0f;

        }

        public override void Update(GameTime gameTime)
        {
            if (_isVulnerable == false || _boss.Health <= 0) { return; }
            _elapsedInvulnerabilityTime += (float)gameTime.ElapsedGameTime.TotalSeconds;
            if (_elapsedInvulnerabilityTime >= InvulnerabilityTime)
            {
                _isVulnerable = true;
            }
        }
    }
}
